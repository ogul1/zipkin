# These test build commands mentioned in various README.md files.
#
# We don't test documentation-only commits.
# skip commits made by the release plugin
# yamllint disable-line rule:line-length
# skip commits made by the release plugin
# Remove apt repos that are known to break from time to time.
# See https://github.com/actions/virtual-environments/issues/323
# Don't attempt to cache Docker. Sensitive information can be stolen
# via forks, and login session ends up in ~/.docker. This is ok because
# we publish DOCKER_PARENT_IMAGE to ghcr.io, hence local to the runner.
# yamllint disable-line rule:line-length

name: Modified test_readme
jobs:
  zipkin-server:
    name: zipkin-server ()
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      matrix:
        include:
        - name: macos
          os: macos-14
        - name: windows
          os: windows-2022
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-zipkin-server ().csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/zipkin/zipkin', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout Repository
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '21'
        cache: maven
    - run: touch optcd-4.txt
    - name: Cache NPM Packages
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-packages-${{ hashFiles('zipkin-lens/package-lock.json')
          }}
    - run: touch optcd-5.txt
    - name: Execute Server Build
      run: ./mvnw --also-make -pl zipkin-server clean package
      env:
        MAVEN_CONFIG: -T1C -q --batch-mode -DskipTests
    - run: touch optcd-6.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-zipkin-server ()
        path: /home/runner/inotifywait-log-zipkin-server ().csv
  docker:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-docker.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/zipkin/zipkin', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout Repository
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Remove broken apt repos
      run: |-
        for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`
        do sudo rm $apt_file
        done
    - run: touch optcd-4.txt
    - name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '21'
        cache: maven
    - run: touch optcd-5.txt
    - name: Cache NPM Packages
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-packages-${{ hashFiles('zipkin-lens/package-lock.json')
          }}
    - run: touch optcd-6.txt
    - name: Build zipkin-server
      run: ./mvnw --also-make -pl zipkin-server clean package
      env:
        MAVEN_CONFIG: -T1C -q --batch-mode -DskipTests
    - run: touch optcd-7.txt
    - name: docker/README.md - openzipkin/zipkin
      run: |-
        build-bin/docker/docker_build openzipkin/zipkin:test &&
        build-bin/docker/docker_test_image openzipkin/zipkin:test &&
        docker run --rm --entrypoint=/bin/sh openzipkin/zipkin:test \
          -c 'cd BOOT-INF/lib && du -sk *aarch* *x86* *a64*' || true
      env:
        RELEASE_FROM_MAVEN_BUILD: true
    - run: touch optcd-8.txt
    - name: docker/README.md - openzipkin/zipkin-slim
      run: |-
        build-bin/docker/docker_build openzipkin/zipkin-slim:test &&
        build-bin/docker/docker_test_image openzipkin/zipkin-slim:test &&
        docker run --rm --entrypoint=/bin/sh openzipkin/zipkin-slim:test \
          -c 'cd BOOT-INF/lib && du -sk *aarch* *x86* *a64*' || true
      env:
        DOCKER_TARGET: zipkin-slim
        RELEASE_FROM_MAVEN_BUILD: true
    - run: touch optcd-9.txt
    - name: docker/test-images/zipkin-ui/README.md
      run: |-
        build-bin/docker/docker_build ${DOCKER_TAG} &&
        build-bin/docker/docker_test_image ${DOCKER_TAG}
      env:
        DOCKER_TAG: openzipkin/zipkin-ui:test
        DOCKER_FILE: docker/test-images/zipkin-ui/Dockerfile
        RELEASE_FROM_MAVEN_BUILD: true
    - run: touch optcd-10.txt
    - name: docker/test-images/zipkin-uiproxy/README.md
      run: |-
        build-bin/docker/docker_build ${DOCKER_TAG} &&
        build-bin/docker/docker_test_image ${DOCKER_TAG}
      env:
        DOCKER_TAG: openzipkin/zipkin-uiproxy:test
        DOCKER_FILE: docker/test-images/zipkin-uiproxy/Dockerfile
    - run: touch optcd-11.txt
    - name: docker/test-images/zipkin-activemq/README.md
      run: |-
        build-bin/docker/docker_build ${DOCKER_TAG} &&
        build-bin/docker/docker_test_image ${DOCKER_TAG}
      env:
        DOCKER_TAG: openzipkin/zipkin-activemq:test
        DOCKER_FILE: docker/test-images/zipkin-activemq/Dockerfile
    - run: touch optcd-12.txt
    - name: docker/test-images/zipkin-cassandra/README.md
      run: |-
        build-bin/docker/docker_build ${DOCKER_TAG} &&
        build-bin/docker/docker_test_image ${DOCKER_TAG}
      env:
        DOCKER_TAG: openzipkin/zipkin-cassandra:test
        DOCKER_FILE: docker/test-images/zipkin-cassandra/Dockerfile
    - run: touch optcd-13.txt
    - name: docker/test-images/zipkin-elasticsearch7/README.md
      run: |-
        build-bin/docker/docker_build ${DOCKER_TAG} &&
        build-bin/docker/docker_test_image ${DOCKER_TAG}
      env:
        DOCKER_TAG: openzipkin/zipkin-elasticsearch7:test
        DOCKER_FILE: docker/test-images/zipkin-elasticsearch7/Dockerfile
    - run: touch optcd-14.txt
    - name: docker/test-images/zipkin-elasticsearch8/README.md
      run: |-
        build-bin/docker/docker_build ${DOCKER_TAG} &&
        build-bin/docker/docker_test_image ${DOCKER_TAG}
      env:
        DOCKER_TAG: openzipkin/zipkin-elasticsearch8:test
        DOCKER_FILE: docker/test-images/zipkin-elasticsearch8/Dockerfile
    - run: touch optcd-15.txt
    - name: docker/test-images/zipkin-opensearch2/README.md
      run: |-
        build-bin/docker/docker_build ${DOCKER_TAG} &&
        build-bin/docker/docker_test_image ${DOCKER_TAG}
      env:
        DOCKER_TAG: openzipkin/zipkin-opensearch2:test
        DOCKER_FILE: docker/test-images/zipkin-opensearch2/Dockerfile
    - run: touch optcd-16.txt
    - name: docker/test-images/zipkin-eureka/README.md
      run: |-
        build-bin/docker/docker_build openzipkin/zipkin-eureka:test &&
        build-bin/docker/docker_test_image openzipkin/zipkin-eureka:test
      env:
        DOCKER_FILE: docker/test-images/zipkin-eureka/Dockerfile
    - run: touch optcd-17.txt
    - name: docker/test-images/zipkin-kafka/README.md
      run: |-
        build-bin/docker/docker_build openzipkin/zipkin-kafka:test &&
        build-bin/docker/docker_test_image openzipkin/zipkin-kafka:test
      env:
        DOCKER_FILE: docker/test-images/zipkin-kafka/Dockerfile
    - run: touch optcd-18.txt
    - name: docker/test-images/zipkin-mysql/README.md
      run: |-
        build-bin/docker/docker_build openzipkin/zipkin-mysql:test &&
        build-bin/docker/docker_test_image openzipkin/zipkin-mysql:test
      env:
        DOCKER_FILE: docker/test-images/zipkin-mysql/Dockerfile
    - run: touch optcd-19.txt
    - name: docker/test-images/zipkin-rabbitmq/README.md
      run: |-
        build-bin/docker/docker_build openzipkin/zipkin-rabbitmq:test &&
        build-bin/docker/docker_test_image openzipkin/zipkin-rabbitmq:test
      env:
        DOCKER_FILE: docker/test-images/zipkin-rabbitmq/Dockerfile
    - run: touch optcd-20.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-docker
        path: /home/runner/inotifywait-log-docker.csv
    name: docker
'on':
- push
- workflow_dispatch
